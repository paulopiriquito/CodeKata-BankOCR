using SegmentationReader;
using Shouldly;
using Xunit;

namespace SegmentationReaderTest
{
    public class AccountNumberTest
    {
        [Theory]
        [InlineData(
            "000000000",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            "| || || || || || || || || |" + "\n" +
            "|_||_||_||_||_||_||_||_||_|")]
        [InlineData(
            "711111111",
            "                           " + "\n" +
            "  |  |  |  |  |  |  |  |  |" + "\n" +
            "  |  |  |  |  |  |  |  |  |")]
        [InlineData(
            "222222222 ERR",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            " _| _| _| _| _| _| _| _| _|" + "\n" +
            "|_ |_ |_ |_ |_ |_ |_ |_ |_ ")]
        [InlineData(
            "333393333",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            " _| _| _| _| _| _| _| _| _|" + "\n" +
            " _| _| _| _| _| _| _| _| _|")]
        [InlineData(
            "444444444 ERR",
            "                           " + "\n" +
            "|_||_||_||_||_||_||_||_||_|" + "\n" +
            "  |  |  |  |  |  |  |  |  |")]
        [InlineData(
            "555555555 AMB ['559555555', '555655555']",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            "|_ |_ |_ |_ |_ |_ |_ |_ |_ " + "\n" +
            " _| _| _| _| _| _| _| _| _|")]
        [InlineData(
            "666666666 AMB ['686666666', '666566666']",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            "|_ |_ |_ |_ |_ |_ |_ |_ |_ " + "\n" +
            "|_||_||_||_||_||_||_||_||_|")]
        [InlineData(
            "777777177",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            "  |  |  |  |  |  |  |  |  |" + "\n" +
            "  |  |  |  |  |  |  |  |  |")]
        [InlineData(
            "888888888 AMB ['888886888', '888888988', '888888880']",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            "|_||_||_||_||_||_||_||_||_|" + "\n" +
            "|_||_||_||_||_||_||_||_||_|")]
        [InlineData(
            "999999999 AMB ['899999999', '993999999', '999959999']",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            "|_||_||_||_||_||_||_||_||_|" + "\n" +
            " _| _| _| _| _| _| _| _| _|")]
        [InlineData(
            "123456789",
            "    _  _     _  _  _  _  _ " + "\n" +
            "  | _| _||_||_ |_   ||_||_|" + "\n" +
            "  ||_  _|  | _||_|  ||_| _|")]
        [InlineData(
            "000000051",
            " _  _  _  _  _  _  _  _    " + "\n" +
            "| || || || || || || ||_   |" + "\n" +
            "|_||_||_||_||_||_||_| _|  |")]
        [InlineData(
            "49006771? ILL",
            "    _  _  _  _  _  _     _ " + "\n" +
            "|_||_|| || ||_   |  |  | _ " + "\n" +
            "  | _||_||_||_|  |  |  | _|")]
        [InlineData(
            "1234?678? ILL",
            "    _  _     _  _  _  _  _ " + "\n" +
            "  | _| _||_| _ |_   ||_||_|" + "\n" +
            "  ||_  _|  | _||_|  ||_| _ ")]
        [InlineData(
            "664371485",
            " _  _     _  _        _  _ " + "\n" +
            "|_ |_ |_| _|  |  ||_||_||_ " + "\n" +
            "|_||_|  | _|  |  |  | _| _|")]
        [InlineData(
            "200800000",
            " _  _  _  _  _  _  _  _  _ " + "\n" +
            " _|| || || || || || || || |" + "\n" +
            "|_ |_||_||_||_||_||_||_||_|")]
        [InlineData(
            "490867715",
            "    _  _  _  _  _  _     _ " + "\n" +
            "|_||_|| ||_||_   |  |  | _ " + "\n" +
            "  | _||_||_||_|  |  |  | _|")]
        [InlineData(
            "490067715 AMB ['490867715', '490067115', '490067719']",
            "    _  _  _  _  _  _     _ " + "\n" +
            "|_||_|| || ||_   |  |  ||_ " + "\n" +
            "  | _||_||_||_|  |  |  | _|")]
        public void AccountNumberToStringTest(string expected, string input)
        {
            IAccountNumber accountNumber = new AccountNumber(input);
            
            accountNumber.ToStringWithStatus().ShouldBe(expected);
        }
    }
}